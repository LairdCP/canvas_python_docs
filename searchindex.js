Search.setIndex({"docnames": ["canvas", "canvas_ble", "canvas_net", "canvas_uwb", "index", "machine"], "filenames": ["canvas.rst", "canvas_ble.rst", "canvas_net.rst", "canvas_uwb.rst", "index.rst", "machine.rst"], "titles": ["General", "BLE", "Canvas Networking", "UWB", "Welcome to Canvas documentation!", "Machine"], "terms": {"class": [0, 1, 2, 3, 5], "canva": [0, 1], "nfctag": [0, 4], "The": [0, 1, 2, 3, 5], "i": [0, 1, 2, 3, 5], "us": [0, 1, 2, 3, 5], "creat": [0, 1, 2, 3], "new": [0, 1, 3], "nfc": 0, "tag": [0, 1], "object": [0, 1, 2, 3, 5], "hold": 0, "an": [0, 1, 2, 3, 5], "intern": [0, 1, 5], "data": [0, 1, 2, 3, 5], "buffer": [0, 1, 5], "which": [0, 1, 2, 3], "can": [0, 1, 2, 3, 5], "read": [0, 1, 5], "from": [0, 1, 2, 3, 5], "written": [0, 1], "reader": 0, "initi": [0, 1, 3, 5], "specifi": [0, 1, 3], "size": [0, 1, 2, 5], "expect": [0, 3], "ndef": 0, "format": [0, 1, 5], "also": [0, 1, 2, 3, 5], "python": [0, 1], "represent": [0, 1], "attribut": 0, "name": [0, 1, 2, 5], "record": 0, "thi": [0, 1, 2, 3, 5], "list": [0, 1, 3], "updat": [0, 1, 2], "automat": [0, 1], "when": [0, 1, 2, 3, 5], "manual": 0, "user": [0, 1], "call": [0, 1, 2, 3, 5], "sync_to_buff": 0, "onli": [0, 1, 2, 3, 5], "one": [0, 1, 2, 3, 5], "instanc": [0, 1, 2, 3, 5], "time": [0, 1, 2, 5], "paramet": [0, 1, 2, 3, 5], "byte": [0, 1, 2, 3, 5], "clear": [0, 1], "close": [0, 1, 3], "releas": 0, "ani": [0, 1, 2, 3, 5], "memori": 0, "associ": [0, 1, 2, 3, 5], "emul": 0, "after": [0, 1, 2], "method": [0, 1, 3, 5], "longer": [0, 1, 3], "valid": [0, 1], "To": [0, 2, 3], "again": [0, 3], "must": [0, 1, 2, 3], "set_write_callback": 0, "cb": [0, 1, 2, 3], "set": [0, 1, 2, 3, 5], "callback": [0, 2, 3, 5], "function": [0, 1, 2, 3, 5], "write": [0, 1, 5], "take": [0, 1, 2, 3], "argument": [0, 1, 2, 5], "That": 0, "content": [0, 1], "them": 0, "alwai": [0, 1], "overwritten": 0, "begin": 0, "timer": [0, 4], "interval_m": [0, 1], "int": [0, 1, 2, 3, 5], "repeat": [0, 5], "bool": [0, 1, 2, 3], "softwar": [0, 2], "On": 0, "expir": 0, "pass": [0, 1, 2], "constructor": 0, "If": [0, 1, 2, 3], "continu": [0, 1], "interv": [0, 1, 3], "until": [0, 1], "stop": [0, 1, 2, 3], "exampl": [0, 1, 2, 3, 5], "def": [0, 1, 2], "timer_cb": 0, "print": [0, 1, 2], "1000": 0, "true": [0, 1, 2, 3], "none": [0, 1, 2, 5], "start": [0, 1, 2, 3, 5], "millisecond": [0, 1, 3, 5], "whether": [0, 1], "should": [0, 1, 3], "accept": [0, 1, 2], "singl": [0, 1, 2, 3, 5], "change_period": 0, "chang": [0, 1, 5], "run": 0, "restart": 0, "even": 0, "alreadi": 0, "had": 0, "yet": [0, 1], "been": [0, 1, 3], "befor": [0, 1, 3], "wa": [0, 1, 3], "mai": [0, 1, 5], "still": [0, 1], "zcbor_from_obj": [0, 4], "input": [0, 5], "in_map": 0, "convert": [0, 1], "dictionari": [0, 1], "cbor": 0, "string": [0, 1, 2], "wrap": 0, "insid": 0, "map": [0, 1, 5], "return": [0, 1, 2, 3, 5], "zcbor_to_obj": [0, 4], "modul": [1, 2, 3, 4, 5], "describ": [1, 2, 3, 5], "chapter": [1, 2, 3, 5], "provid": [1, 2, 3, 5], "interfac": [1, 2, 3, 5], "bluetooth": 1, "low": [1, 5], "energi": 1, "stack": [1, 2, 3], "radio": [1, 2, 3], "canvas_bl": 1, "advertis": [1, 4], "two": [1, 5], "popul": [1, 5], "applic": [1, 2, 3, 5], "scan": 1, "respons": [1, 3], "cannot": [1, 3], "inspect": 1, "modifi": 1, "place": 1, "either": [1, 2, 3], "instead": [1, 3], "ar": [1, 2, 3, 5], "add": [1, 3], "current": [1, 5], "copi": [1, 2], "without": 1, "consequ": 1, "need": [1, 3], "ltv": 1, "length": [1, 2, 3, 5], "valu": [1, 2, 3, 5], "add_ltv": 1, "add_tag_str": 1, "assist": 1, "ad": [1, 3], "field": 1, "addit": 1, "care": 1, "taken": 1, "add_data": 1, "ensur": [1, 3], "proper": 1, "some": 1, "possibl": [1, 2], "sometim": 1, "type": [1, 2, 3, 5], "exist": [1, 2, 5], "other": [1, 3], "see": [1, 2], "ad_type_": 1, "platform": 1, "configur": [1, 3, 5], "depend": [1, 2], "legaci": 1, "non": 1, "extend": 1, "limit": 1, "31": [1, 2], "each": [1, 3], "allow": 1, "consider": 1, "larger": [1, 2], "ever": 1, "multipl": [1, 5], "implement": [1, 2], "add_canvas_data": 1, "config_vers": 1, "network_id": 1, "specif": [1, 5], "conveni": 1, "help": 1, "identifi": [1, 3, 5], "devic": [1, 2, 3, 5], "common": 1, "tool": 1, "23": 1, "chose": 1, "how": 1, "There": 1, "reason": 1, "includ": 1, "both": [1, 3], "version": [1, 2], "8": [1, 2, 3, 5], "bit": [1, 2, 3, 5], "increment": 1, "requir": [1, 2, 3], "0": [1, 2, 3, 5], "network": [1, 4], "id": [1, 2, 3], "fals": [1, 2, 3], "raw": [1, 2, 3], "select": [1, 5], "contain": [1, 2, 3, 5], "tlv": 1, "base": [1, 2], "manufactur": 1, "0x0201": 1, "0x03": 1, "0x04": 1, "ad_type_manu_specif": [1, 4], "b": 1, "x01": 1, "x02": 1, "x03": 1, "x04": 1, "defin": 1, "add_smp_uuid": 1, "smp": 1, "uuid": 1, "128": 1, "str": [1, 2, 5], "ad_type_name_complet": [1, 4], "clear_buff": 1, "set_channel_mask": 1, "mask": [1, 2, 3], "channel": [1, 3], "37": 1, "correspond": 1, "A": [1, 2, 3, 5], "1": [1, 2, 3, 5], "indic": 1, "5": [1, 2], "first": [1, 5], "lsb": [1, 5], "set_direct": 1, "direct": 1, "mac": [1, 3], "flag": 1, "address": [1, 3, 5], "target": 1, "set_interv": 1, "min": 1, "max": 1, "rang": [1, 3], "mani": [1, 3], "here": 1, "flexibl": 1, "schedul": 1, "packet": 1, "same": [1, 3, 5], "between": [1, 3], "100": [1, 2], "200": 1, "minimum": 1, "maximum": [1, 3], "set_phi": 1, "primari": 1, "secondari": 1, "phy": 1, "phy_": 1, "bitmask": 1, "For": [1, 2, 3], "1m": [1, 5], "default": [1, 5], "2m": 1, "combin": 1, "lyra": [1, 5], "24": 1, "sera": 1, "nx040": 1, "ye": 1, "code": [1, 3], "No": [1, 5], "set_properti": 1, "phy_1m": [1, 4], "param": 1, "connect": [1, 4], "scannabl": 1, "properti": 1, "central": 1, "receiv": [1, 2, 3], "top": 1, "regular": 1, "than": [1, 2], "product": [1, 2], "validate_data": 1, "perform": 1, "test": 1, "error": [1, 2, 3, 5], "handl": 1, "peripher": [1, 5], "role": [1, 3], "set_periph_callback": [1, 4], "up": [1, 2, 5], "disconnect": [1, 2, 5], "so": 1, "save": 1, "script": 1, "later": 1, "individu": 1, "particular": 1, "fulli": 1, "directli": [1, 3], "made": 1, "get_addr": 1, "arrai": 1, "get_rssi": 1, "rssi": 1, "sign": 1, "dbm": 1, "gattclient": [1, 4], "discov": 1, "interact": [1, 5], "remot": [1, 2], "all": [1, 3], "__errcod": 1, "standard": [1, 2], "client": [1, 2], "configure_subscript": 1, "enabl": [1, 3, 5], "better": 1, "preserv": 1, "compat": [1, 2], "databas": 1, "discoveri": 1, "servic": 1, "characterist": 1, "descriptor": 1, "augment": 1, "assign": 1, "friendli": 1, "set_nam": 1, "disabl": [1, 2], "cccd": 1, "given": 1, "notif": 1, "gatt_client": 1, "b8d00002": 1, "6329": 1, "ef96": 1, "8a4d": 1, "55b376d8b25a": 1, "cccd_state_notifi": 1, "present": 1, "within": 1, "occur": [1, 2, 5], "cccd_state_dis": 1, "cccd_state_ind": 1, "cccd_state_both": 1, "decid": 1, "what": 1, "send": [1, 3, 5], "sent": 1, "get_dict": 1, "readabl": 1, "set_callback": [1, 3], "notifi": 1, "might": 1, "make": [1, 2], "tupl": [1, 2, 3, 5], "follow": [1, 3, 5], "entri": [1, 3], "caus": 1, "ha": [1, 2, 3, 5], "attach": 1, "notify_cb": 1, "addr_to_str": [1, 4], "binascii": 1, "hexlifi": 1, "decod": 1, "onc": [1, 3], "more": 1, "descript": 1, "store": 1, "These": 1, "uniqu": [1, 3], "refer": 1, "its": 1, "writabl": 1, "gattserv": [1, 4], "creation": [1, 3], "support": [1, 2, 3, 5], "perspect": 1, "e": [1, 2, 5], "g": [1, 5], "abl": 1, "have": [1, 3], "vice": 1, "versa": 1, "rais": [1, 2], "number": [1, 2, 3, 5], "differ": [1, 5], "caller": 1, "build_from_dict": 1, "As": 1, "avail": [1, 2], "event_": [1, 5], "trigger": 1, "respond": [1, 3], "achiev": 1, "through": 1, "system": [1, 2], "reciev": 1, "my_callback": 1, "underli": [1, 5], "variou": [1, 3], "member": 1, "event_attr_valu": 1, "event_indication_ok": 1, "event_cccd_non": 1, "event_cccd_notifi": 1, "event_cccd_ind": 1, "event_cccd_both": 1, "event_indication_timeout": 1, "concern": 1, "deem": 1, "fail": 1, "dealt": 1, "delet": [1, 3, 5], "indication_timeout": 1, "dict": 1, "build": 1, "correctli": 1, "kei": [1, 2], "NOT": [1, 2], "n": 1, "where": [1, 3], "hexadecim": 1, "16": 1, "charact": [1, 2], "clariti": 1, "best": 1, "kept": 1, "short": 1, "item": [1, 2], "capabl": [1, 3], "acknowledg": 1, "writeack": 1, "note": 1, "initialis": 1, "zero": [1, 2], "upon": 1, "being": [1, 5], "encrypt": 1, "level": [1, 5], "bond": 1, "mitm": 1, "authent": 1, "pair": 1, "per": [1, 3], "facil": 1, "suppli": 1, "pertain": 1, "writeabl": 1, "exce": 1, "": [1, 3, 5], "acknowleg": 1, "timeout": [1, 2], "scanner": [1, 4], "singleton": [1, 2, 5], "instanti": [1, 2, 5], "attempt": [1, 2, 3, 5], "second": [1, 2, 5], "scan_cb": 1, "addr": 1, "form": [1, 2], "signal": [1, 5], "strength": 1, "type_connect": 1, "type_scann": 1, "type_direct": 1, "type_scan_respons": 1, "type_legaci": 1, "type_extend": 1, "filter_add": 1, "filter": 1, "In": [1, 3], "area": 1, "lot": 1, "desir": 1, "match": [1, 3], "reduc": 1, "process": 1, "focu": 1, "interest": 1, "filter_nam": 1, "entireti": 1, "filter_uuid": 1, "determin": [1, 2], "four": 1, "32": 1, "filter_addr": 1, "filter_manuf_data": 1, "compar": 1, "smaller": 1, "portion": 1, "filter_data": 1, "gener": [1, 3, 4, 5], "locat": 1, "encod": 1, "filter_reset": 1, "remov": 1, "phy_2m": [1, 4], "phy_cod": [1, 4], "set_tim": 1, "window_m": 1, "window": 1, "less": 1, "equal": [1, 3, 5], "roughli": 1, "50": 1, "out": [1, 5], "everi": 1, "activ": [1, 3, 5], "boolean": 1, "passiv": 1, "request": 1, "printabl": 1, "mine": 1, "my_addr": [1, 4], "xd3": 1, "xae": 1, "xa8": 1, "xf7": 1, "01f7a87e5caed3": 1, "cb_con": 1, "cb_discon": 1, "connection_cb": 1, "conn": 1, "establish": 1, "disconnection_cb": 1, "str_to_addr": [1, 4], "appropri": 1, "end": 1, "find_ltv": [1, 4], "find": 1, "search": [1, 4], "found": 1, "occurr": 1, "init": [1, 3, 4], "It": [1, 5], "get": [1, 2, 3, 5], "local": [1, 3], "con": 1, "discon": 1, "oper": 1, "addr_str": 1, "binari": 1, "usabl": 1, "mine_str": 1, "ad_type_flag": [1, 4], "complet": [1, 2], "ad_type_name_short": [1, 4], "shorten": 1, "ad_type_uuid128_complet": [1, 4], "ad_type_uuid128_incomplet": [1, 4], "incomplet": 1, "ad_type_uuid16_complet": [1, 4], "ad_type_uuid16_incomplet": [1, 4], "ad_type_uuid32_complet": [1, 4], "ad_type_uuid32_incomplet": [1, 4], "phy_125k": [1, 4], "125kbit": 1, "sec": 1, "phy_500k": [1, 4], "500kbit": 1, "mg100": 2, "bl5340": 2, "dvk": 2, "etc": [2, 5], "suit": 2, "micropython": 2, "wherev": 2, "zephyr": [2, 5], "pinnacl": 2, "bring": 2, "wait": 2, "becom": 2, "nic": 2, "ifconfig": 2, "dhcp": 2, "while": 2, "isconnect": 2, "sleep_m": 2, "250": 2, "socket": [2, 5], "ssl": 2, "commun": [2, 3, 5], "host": 2, "custom": 2, "document": [2, 5], "below": 2, "canvas_net": 2, "lwm2m": [2, 4], "report": 2, "rd": 2, "event": [2, 5], "integ": 2, "ev_lwm2m": 2, "constant": 2, "resourc": [2, 3], "2": [2, 3, 5], "3": [2, 5], "4": [2, 5], "option": [2, 5], "get_byt": 2, "get_int": 2, "u8": 2, "u16": 2, "u32": 2, "except": 2, "set_endpoint_nam": 2, "endpoint": 2, "set_exec_handl": 2, "handler": 2, "execut": 2, "whenev": 2, "server": 2, "bootstrap": 2, "do": 2, "deregist": 2, "ev_rd_bootstrap_reg_complet": 2, "registr": 2, "ev_rd_bootstrap_reg_failur": 2, "failur": 2, "ev_rd_bootstrap_transfer_complet": 2, "transfer": 2, "ev_rd_deregist": 2, "deregistr": 2, "ev_rd_deregister_failur": 2, "ev_rd_disconnect": 2, "ev_rd_engine_suspend": 2, "engin": 2, "suspend": 2, "ev_rd_network_error": 2, "ev_rd_queue_mode_rx_off": 2, "off": [2, 5], "queue": 2, "mode": [2, 3, 5], "ev_rd_registration_complet": 2, "ev_rd_registration_failur": 2, "ev_rd_reg_timeout": 2, "ev_rd_reg_upd": 2, "ev_rd_reg_update_complet": 2, "obj_devic": 2, "obj_secur": 2, "secur": 2, "obj_serv": 2, "security_cert": 2, "certif": 2, "security_cert_est": 2, "est": 2, "security_nosec": 2, "nosec": 2, "security_psk": 2, "pre": 2, "share": 2, "security_raw_pk": 2, "public": 2, "modem": [2, 4], "modem_cb": 2, "get_firmware_vers": 2, "firmwar": 2, "get_iccid": 2, "iccid": 2, "sim": 2, "card": 2, "get_imei": 2, "imei": 2, "get_imsi": 2, "imsi": 2, "get_serial_numb": 2, "serial": 2, "power_off": 2, "power": [2, 3], "back": 2, "reset": 2, "reconfigur": [2, 5], "set_apn": 2, "apn": 2, "reboot": 2, "command": [2, 3], "issu": 2, "set_band": 2, "band": 2, "000000": 2, "00000000": 2, "Not": 2, "00000001": 2, "lte": 2, "2000": 2, "mhz": 2, "00000002": 2, "1900": 2, "00000004": 2, "1800": 2, "00000008": 2, "1700": 2, "00000010": 2, "850": 2, "00000080": 2, "900mhz": 2, "453": 2, "00011": 2, "extern": 2, "antenna": 2, "00000100": 2, "9": 2, "1900mhz": 2, "certifi": 2, "00000200": 2, "10": 2, "2100mhz": 2, "00000800": 2, "12": 2, "700": 2, "00001000": 2, "13": 2, "00010000": 2, "17": 2, "00020000": 2, "18": 2, "800mhz": 2, "00040000": 2, "19": 2, "00080000": 2, "20": [2, 5], "01000000": 2, "25": 2, "02000000": 2, "26": 2, "800": 2, "04000000": 2, "27": 2, "08000000": 2, "28": 2, "700mhz": 2, "40000000": 2, "450mhz": 2, "000002": 2, "66": 2, "1800mhz": 2, "000080": 2, "72": 2, "000100": 2, "73": 2, "100000": 2, "85": 2, "400000": 2, "87": 2, "410mhz": 2, "800000": 2, "88": 2, "809189f": 2, "lead": 2, "set_rat": 2, "rat": 2, "access": 2, "technologi": 2, "cat": 2, "m1": 2, "nb1": 2, "update_firmwar": 2, "file": 2, "url": 2, "path": 2, "imag": 2, "event_active_band": 2, "event_apn_upd": 2, "event_band": 2, "event_fota_count": 2, "event_fota_st": 2, "event_gp": 2, "event_gps_position_statu": 2, "event_network_st": 2, "event_polt": 2, "event_polte_locate_statu": 2, "event_polte_registr": 2, "event_rat": 2, "event_revis": 2, "event_rssi": 2, "event_sinr": 2, "event_site_survei": 2, "event_sleep_st": 2, "event_startup_st": 2, "event_st": 2, "state_fota_complet": 2, "state_fota_file_error": 2, "state_fota_idl": 2, "state_fota_instal": 2, "state_fota_pad": 2, "state_fota_reboot_and_reconfigur": 2, "state_fota_send_eot": 2, "state_fota_start": 2, "state_fota_wip": 2, "state_initi": 2, "state_network_emerg": 2, "state_network_home_network": 2, "state_network_not_regist": 2, "state_network_out_of_coverag": 2, "state_network_registration_deni": 2, "state_network_roam": 2, "state_network_search": 2, "state_network_unable_to_configur": 2, "state_not_readi": 2, "state_sleep_awak": 2, "state_sleep_hibern": 2, "state_sleep_lite_hibern": 2, "state_sleep_sleep": 2, "state_sleep_uniniti": 2, "state_startup_inactive_sim": 2, "state_startup_readi": 2, "state_startup_simlock": 2, "state_startup_sim_not_pres": 2, "state_startup_unknown": 2, "state_startup_unrecoverable_error": 2, "state_startup_waiting_for_access_cod": 2, "canvas_uwb": 3, "uwbdevicest": [3, 4], "state": [3, 5], "helper": 3, "repres": 3, "get_device_st": [3, 4], "is_act": 3, "least": [3, 5], "session": 3, "is_error": 3, "normal": 3, "is_readi": 3, "readi": 3, "uwbsess": [3, 4], "session_id": 3, "collect": 3, "relat": 3, "session_new": [3, 4], "set_": 3, "destroi": 3, "side": 3, "1000m": 3, "wai": 3, "exchang": 3, "therefor": 3, "add_multicast": 3, "multicast": 3, "set_app_config": 3, "config_multi_node_mod": [3, 4], "mode_multicast": [3, 4], "free": 3, "del_multicast": 3, "get_app_config": 3, "config_id": 3, "get_session_st": 3, "uwbsessionst": [3, 4], "approxim": 3, "set_ranging_interv": 3, "argumn": 3, "peer": 3, "centimet": 3, "canas_uwb": 3, "range_error": [3, 4], "invalid": 3, "set_local_addr": 3, "set_peer_addr": 3, "successfulli": 3, "is_deinit": 3, "deinit": 3, "is_idl": 3, "idl": 3, "is_init": 3, "uwbstackcap": [3, 4], "max_multicast": 3, "max_sess": 3, "channel_mask": 3, "get_stack_cap": [3, 4], "get_channel_mask": 3, "0x00000001": 3, "0x00000003": 3, "get_max_multicast": 3, "get_max_sess": 3, "is_initiator_support": 3, "is_responder_support": 3, "raw_uci_send": [3, 4], "uci": 3, "repli": 3, "role_respond": [3, 4], "role_initi": [3, 4], "shutdown": [3, 4], "config_device_rol": [3, 4], "config_device_typ": [3, 4], "config_local_address": [3, 4], "config_mac_address_mod": [3, 4], "config_max_rr_retri": [3, 4], "round": 3, "retri": 3, "multi": 3, "node": 3, "unicast": 3, "config_number_of_controle": [3, 4], "controle": 3, "config_peer_address": [3, 4], "config_preamble_code_index": [3, 4], "preambl": 3, "index": [3, 4], "config_ranging_interv": [3, 4], "config_ranging_round_usag": [3, 4], "usag": 3, "config_rf_frame_config": [3, 4], "rf": 3, "frame": 3, "config_sfd_id": [3, 4], "sfd": 3, "config_slots_per_rr": [3, 4], "slot": 3, "config_slot_dur": [3, 4], "durat": 3, "config_tx_pow": [3, 4], "transmit": 3, "mode_unicast": [3, 4], "control": [3, 5], "ble": 4, "uwb": 4, "machin": 4, "i2c": [4, 5], "pin": [4, 5], "rtc": [4, 5], "spi": [4, 5], "page": 4, "hardwar": 5, "inter": 5, "integr": 5, "circuit": 5, "wire": 5, "bu": 5, "programm": 5, "sda": 5, "scl": 5, "40003000": 5, "0x40": 5, "silicon": 5, "lab": 5, "i2c0": 5, "pd03": 5, "pd02": 5, "7": 5, "ti": 5, "hdc1010": 5, "http": 5, "download": 5, "mikro": 5, "com": 5, "datasheet": 5, "pdf": 5, "part": 5, "temperatur": 5, "humid": 5, "click": 5, "board": 5, "www": 5, "temp": 5, "hum": 5, "mikrobu": 5, "set_address": 5, "write_read": 5, "port_pin": 5, "pull": 5, "pull_non": 5, "o": 5, "known": 5, "gpio": 5, "purpos": 5, "output": 5, "commonli": 5, "physic": 5, "drive": 5, "voltag": 5, "IN": 5, "digit": 5, "logic": 5, "port": 5, "dynam": 5, "label": 5, "gpio3": 5, "dapi": 5, "no_connect": 5, "pull_up": 5, "pull_down": 5, "configure_ev": 5, "interrupt": 5, "high": 5, "re": 5, "potenti": 5, "toggl": 5, "neg": 5, "analog": 5, "event_both": 5, "rise": 5, "fall": 5, "edg": 5, "event_fal": 5, "transit": 5, "event_non": 5, "event_ris": 5, "open_drain": 5, "imped": 5, "down": 5, "resistor": 5, "real": 5, "clock": 5, "keep": 5, "track": 5, "date": 5, "datetim": 5, "With": 5, "year": 5, "month": 5, "dai": 5, "weekdai": 5, "hour": 5, "minut": 5, "chip": 5, "40023000": 5, "spi_c": 5, "50000000": 5, "cs_active_low": 5, "usart0": 5, "pc02": 5, "pc04": 5, "pc05": 5, "pc03": 5, "rate": 5, "polar": 5, "phase": 5, "first_bit": 5, "msb": 5, "driver": 5, "sck": 5, "hz": 5, "transceiv": 5, "cs_active_high": 5, "signific": 5, "most": 5}, "objects": {"": [[0, 0, 0, "-", "canvas"], [1, 0, 0, "-", "canvas_ble"], [2, 0, 0, "-", "canvas_net"], [3, 0, 0, "-", "canvas_uwb"], [5, 0, 0, "-", "machine"]], "canvas": [[0, 1, 1, "", "NFCTag"], [0, 1, 1, "", "Timer"], [0, 3, 1, "", "zcbor_from_obj"], [0, 3, 1, "", "zcbor_to_obj"]], "canvas.NFCTag": [[0, 2, 1, "", "clear"], [0, 2, 1, "", "close"], [0, 2, 1, "", "set_write_callback"], [0, 2, 1, "", "sync_to_buffer"]], "canvas.Timer": [[0, 2, 1, "", "change_period"], [0, 2, 1, "", "restart"], [0, 2, 1, "", "start"], [0, 2, 1, "", "stop"]], "canvas_ble": [[1, 4, 1, "", "AD_TYPE_FLAGS"], [1, 4, 1, "", "AD_TYPE_MANU_SPECIFIC"], [1, 4, 1, "", "AD_TYPE_NAME_COMPLETE"], [1, 4, 1, "", "AD_TYPE_NAME_SHORT"], [1, 4, 1, "", "AD_TYPE_UUID128_COMPLETE"], [1, 4, 1, "", "AD_TYPE_UUID128_INCOMPLETE"], [1, 4, 1, "", "AD_TYPE_UUID16_COMPLETE"], [1, 4, 1, "", "AD_TYPE_UUID16_INCOMPLETE"], [1, 4, 1, "", "AD_TYPE_UUID32_COMPLETE"], [1, 4, 1, "", "AD_TYPE_UUID32_INCOMPLETE"], [1, 1, 1, "", "Advertiser"], [1, 1, 1, "", "Connection"], [1, 1, 1, "", "GattClient"], [1, 1, 1, "", "GattServer"], [1, 4, 1, "", "PHY_125K"], [1, 4, 1, "", "PHY_1M"], [1, 4, 1, "", "PHY_2M"], [1, 4, 1, "", "PHY_500K"], [1, 4, 1, "", "PHY_CODED"], [1, 1, 1, "", "Scanner"], [1, 3, 1, "", "addr_to_str"], [1, 3, 1, "", "connect"], [1, 3, 1, "", "find_ltv"], [1, 3, 1, "", "init"], [1, 3, 1, "", "my_addr"], [1, 3, 1, "", "set_periph_callbacks"], [1, 3, 1, "", "str_to_addr"]], "canvas_ble.Advertiser": [[1, 2, 1, "", "add_canvas_data"], [1, 2, 1, "", "add_data"], [1, 2, 1, "", "add_ltv"], [1, 2, 1, "", "add_smp_uuid"], [1, 2, 1, "", "add_tag_string"], [1, 2, 1, "", "clear_buffer"], [1, 2, 1, "", "set_channel_mask"], [1, 2, 1, "", "set_directed"], [1, 2, 1, "", "set_interval"], [1, 2, 1, "", "set_phys"], [1, 2, 1, "", "set_properties"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "update"], [1, 2, 1, "", "validate_data"]], "canvas_ble.Connection": [[1, 2, 1, "", "disconnect"], [1, 2, 1, "", "get_addr"], [1, 2, 1, "", "get_rssi"]], "canvas_ble.GattClient": [[1, 5, 1, "", "CCCD_STATE_BOTH"], [1, 5, 1, "", "CCCD_STATE_DISABLE"], [1, 5, 1, "", "CCCD_STATE_INDICATE"], [1, 5, 1, "", "CCCD_STATE_NOTIFY"], [1, 2, 1, "", "configure_subscription"], [1, 2, 1, "", "discover"], [1, 2, 1, "", "enable"], [1, 2, 1, "", "get_dict"], [1, 2, 1, "", "read"], [1, 2, 1, "", "set_callbacks"], [1, 2, 1, "", "set_name"], [1, 2, 1, "", "write"]], "canvas_ble.GattServer": [[1, 5, 1, "", "EVENT_ATTR_VALUE"], [1, 5, 1, "", "EVENT_CCCD_BOTH"], [1, 5, 1, "", "EVENT_CCCD_INDICATE"], [1, 5, 1, "", "EVENT_CCCD_NONE"], [1, 5, 1, "", "EVENT_CCCD_NOTIFY"], [1, 5, 1, "", "EVENT_INDICATION_OK"], [1, 5, 1, "", "EVENT_INDICATION_TIMEOUT"], [1, 2, 1, "", "build_from_dict"], [1, 2, 1, "", "indicate"], [1, 2, 1, "", "notify"], [1, 2, 1, "", "read"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "write"]], "canvas_ble.Scanner": [[1, 5, 1, "", "FILTER_ADDR"], [1, 5, 1, "", "FILTER_DATA"], [1, 5, 1, "", "FILTER_MANUF_DATA"], [1, 5, 1, "", "FILTER_NAME"], [1, 5, 1, "", "FILTER_UUID"], [1, 5, 1, "", "TYPE_CONNECTABLE"], [1, 5, 1, "", "TYPE_DIRECTED"], [1, 5, 1, "", "TYPE_EXTENDED"], [1, 5, 1, "", "TYPE_LEGACY"], [1, 5, 1, "", "TYPE_SCANNABLE"], [1, 5, 1, "", "TYPE_SCAN_RESPONSE"], [1, 2, 1, "", "filter_add"], [1, 2, 1, "", "filter_reset"], [1, 2, 1, "", "set_phys"], [1, 2, 1, "", "set_timing"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"]], "canvas_net": [[2, 1, 1, "", "Lwm2m"], [2, 1, 1, "", "Modem"]], "canvas_net.Lwm2m": [[2, 5, 1, "", "EV_RD_BOOTSTRAP_REG_COMPLETE"], [2, 5, 1, "", "EV_RD_BOOTSTRAP_REG_FAILURE"], [2, 5, 1, "", "EV_RD_BOOTSTRAP_TRANSFER_COMPLETE"], [2, 5, 1, "", "EV_RD_DEREGISTER"], [2, 5, 1, "", "EV_RD_DEREGISTER_FAILURE"], [2, 5, 1, "", "EV_RD_DISCONNECT"], [2, 5, 1, "", "EV_RD_ENGINE_SUSPENDED"], [2, 5, 1, "", "EV_RD_NETWORK_ERROR"], [2, 5, 1, "", "EV_RD_QUEUE_MODE_RX_OFF"], [2, 5, 1, "", "EV_RD_REGISTRATION_COMPLETE"], [2, 5, 1, "", "EV_RD_REGISTRATION_FAILURE"], [2, 5, 1, "", "EV_RD_REG_TIMEOUT"], [2, 5, 1, "", "EV_RD_REG_UPDATE"], [2, 5, 1, "", "EV_RD_REG_UPDATE_COMPLETE"], [2, 5, 1, "", "OBJ_DEVICE"], [2, 5, 1, "", "OBJ_SECURITY"], [2, 5, 1, "", "OBJ_SERVER"], [2, 5, 1, "", "SECURITY_CERT"], [2, 5, 1, "", "SECURITY_CERT_EST"], [2, 5, 1, "", "SECURITY_NOSEC"], [2, 5, 1, "", "SECURITY_PSK"], [2, 5, 1, "", "SECURITY_RAW_PK"], [2, 2, 1, "", "create"], [2, 2, 1, "", "get_bytes"], [2, 2, 1, "", "get_int"], [2, 2, 1, "", "set"], [2, 2, 1, "", "set_endpoint_name"], [2, 2, 1, "", "set_exec_handler"], [2, 2, 1, "", "start"], [2, 2, 1, "", "stop"]], "canvas_net.Modem": [[2, 5, 1, "", "EVENT_ACTIVE_BANDS"], [2, 5, 1, "", "EVENT_APN_UPDATE"], [2, 5, 1, "", "EVENT_BANDS"], [2, 5, 1, "", "EVENT_FOTA_COUNT"], [2, 5, 1, "", "EVENT_FOTA_STATE"], [2, 5, 1, "", "EVENT_GPS"], [2, 5, 1, "", "EVENT_GPS_POSITION_STATUS"], [2, 5, 1, "", "EVENT_NETWORK_STATE"], [2, 5, 1, "", "EVENT_POLTE"], [2, 5, 1, "", "EVENT_POLTE_LOCATE_STATUS"], [2, 5, 1, "", "EVENT_POLTE_REGISTRATION"], [2, 5, 1, "", "EVENT_RAT"], [2, 5, 1, "", "EVENT_REVISION"], [2, 5, 1, "", "EVENT_RSSI"], [2, 5, 1, "", "EVENT_SINR"], [2, 5, 1, "", "EVENT_SITE_SURVEY"], [2, 5, 1, "", "EVENT_SLEEP_STATE"], [2, 5, 1, "", "EVENT_STARTUP_STATE"], [2, 5, 1, "", "EVENT_STATE"], [2, 5, 1, "", "STATE_FOTA_COMPLETE"], [2, 5, 1, "", "STATE_FOTA_FILE_ERROR"], [2, 5, 1, "", "STATE_FOTA_IDLE"], [2, 5, 1, "", "STATE_FOTA_INSTALL"], [2, 5, 1, "", "STATE_FOTA_PAD"], [2, 5, 1, "", "STATE_FOTA_REBOOT_AND_RECONFIGURE"], [2, 5, 1, "", "STATE_FOTA_SEND_EOT"], [2, 5, 1, "", "STATE_FOTA_START"], [2, 5, 1, "", "STATE_FOTA_WIP"], [2, 5, 1, "", "STATE_INITIALIZED"], [2, 5, 1, "", "STATE_NETWORK_EMERGENCY"], [2, 5, 1, "", "STATE_NETWORK_HOME_NETWORK"], [2, 5, 1, "", "STATE_NETWORK_NOT_REGISTERED"], [2, 5, 1, "", "STATE_NETWORK_OUT_OF_COVERAGE"], [2, 5, 1, "", "STATE_NETWORK_REGISTRATION_DENIED"], [2, 5, 1, "", "STATE_NETWORK_ROAMING"], [2, 5, 1, "", "STATE_NETWORK_SEARCHING"], [2, 5, 1, "", "STATE_NETWORK_UNABLE_TO_CONFIGURE"], [2, 5, 1, "", "STATE_NOT_READY"], [2, 5, 1, "", "STATE_SLEEP_AWAKE"], [2, 5, 1, "", "STATE_SLEEP_HIBERNATE"], [2, 5, 1, "", "STATE_SLEEP_LITE_HIBERNATE"], [2, 5, 1, "", "STATE_SLEEP_SLEEP"], [2, 5, 1, "", "STATE_SLEEP_UNINITIALIZED"], [2, 5, 1, "", "STATE_STARTUP_INACTIVE_SIM"], [2, 5, 1, "", "STATE_STARTUP_READY"], [2, 5, 1, "", "STATE_STARTUP_SIMLOCK"], [2, 5, 1, "", "STATE_STARTUP_SIM_NOT_PRESENT"], [2, 5, 1, "", "STATE_STARTUP_UNKNOWN"], [2, 5, 1, "", "STATE_STARTUP_UNRECOVERABLE_ERROR"], [2, 5, 1, "", "STATE_STARTUP_WAITING_FOR_ACCESS_CODE"], [2, 2, 1, "", "get_firmware_version"], [2, 2, 1, "", "get_iccid"], [2, 2, 1, "", "get_imei"], [2, 2, 1, "", "get_imsi"], [2, 2, 1, "", "get_serial_number"], [2, 2, 1, "", "power_off"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "set_apn"], [2, 2, 1, "", "set_bands"], [2, 2, 1, "", "set_rat"], [2, 2, 1, "", "update_firmware"]], "canvas_uwb": [[3, 4, 1, "", "CONFIG_DEVICE_ROLE"], [3, 4, 1, "", "CONFIG_DEVICE_TYPE"], [3, 4, 1, "", "CONFIG_LOCAL_ADDRESS"], [3, 4, 1, "", "CONFIG_MAC_ADDRESS_MODE"], [3, 4, 1, "", "CONFIG_MAX_RR_RETRY"], [3, 4, 1, "", "CONFIG_MULTI_NODE_MODE"], [3, 4, 1, "", "CONFIG_NUMBER_OF_CONTROLEES"], [3, 4, 1, "", "CONFIG_PEER_ADDRESS"], [3, 4, 1, "", "CONFIG_PREAMBLE_CODE_INDEX"], [3, 4, 1, "", "CONFIG_RANGING_INTERVAL"], [3, 4, 1, "", "CONFIG_RANGING_ROUND_USAGE"], [3, 4, 1, "", "CONFIG_RF_FRAME_CONFIG"], [3, 4, 1, "", "CONFIG_SFD_ID"], [3, 4, 1, "", "CONFIG_SLOTS_PER_RR"], [3, 4, 1, "", "CONFIG_SLOT_DURATION"], [3, 4, 1, "", "CONFIG_TX_POWER"], [3, 4, 1, "", "MODE_MULTICAST"], [3, 4, 1, "", "MODE_UNICAST"], [3, 4, 1, "", "RANGE_ERROR"], [3, 4, 1, "", "ROLE_INITIATOR"], [3, 4, 1, "", "ROLE_RESPONDER"], [3, 1, 1, "", "UwbDeviceState"], [3, 1, 1, "", "UwbSession"], [3, 1, 1, "", "UwbSessionState"], [3, 1, 1, "", "UwbStackCapabilities"], [3, 3, 1, "", "get_device_state"], [3, 3, 1, "", "get_stack_capability"], [3, 3, 1, "", "init"], [3, 3, 1, "", "raw_uci_send"], [3, 3, 1, "", "session_new"], [3, 3, 1, "", "shutdown"]], "canvas_uwb.UwbDeviceState": [[3, 2, 1, "", "is_active"], [3, 2, 1, "", "is_error"], [3, 2, 1, "", "is_ready"]], "canvas_uwb.UwbSession": [[3, 2, 1, "", "add_multicast"], [3, 2, 1, "", "close"], [3, 2, 1, "", "del_multicast"], [3, 2, 1, "", "get_app_config"], [3, 2, 1, "", "get_session_state"], [3, 2, 1, "", "set_app_config"], [3, 2, 1, "", "set_callback"], [3, 2, 1, "", "set_local_addr"], [3, 2, 1, "", "set_peer_addr"], [3, 2, 1, "", "set_ranging_interval"], [3, 2, 1, "", "start"], [3, 2, 1, "", "stop"]], "canvas_uwb.UwbSessionState": [[3, 2, 1, "", "is_active"], [3, 2, 1, "", "is_deinit"], [3, 2, 1, "", "is_error"], [3, 2, 1, "", "is_idle"], [3, 2, 1, "", "is_init"]], "canvas_uwb.UwbStackCapabilities": [[3, 2, 1, "", "get_channel_mask"], [3, 2, 1, "", "get_max_multicast"], [3, 2, 1, "", "get_max_sessions"], [3, 2, 1, "", "is_initiator_supported"], [3, 2, 1, "", "is_responder_supported"]], "machine": [[5, 1, 1, "", "I2C"], [5, 1, 1, "", "Pin"], [5, 1, 1, "", "RTC"], [5, 1, 1, "", "SPI"]], "machine.I2C": [[5, 2, 1, "", "read"], [5, 2, 1, "", "set_address"], [5, 2, 1, "", "write"], [5, 2, 1, "", "write_read"]], "machine.Pin": [[5, 5, 1, "", "ANALOG"], [5, 5, 1, "", "EVENT_BOTH"], [5, 5, 1, "", "EVENT_FALLING"], [5, 5, 1, "", "EVENT_NONE"], [5, 5, 1, "", "EVENT_RISING"], [5, 5, 1, "", "IN"], [5, 5, 1, "", "NO_CONNECT"], [5, 5, 1, "", "OPEN_DRAIN"], [5, 5, 1, "", "OUT"], [5, 5, 1, "", "PULL_DOWN"], [5, 5, 1, "", "PULL_NONE"], [5, 5, 1, "", "PULL_UP"], [5, 2, 1, "", "configure_event"], [5, 2, 1, "", "high"], [5, 2, 1, "", "low"], [5, 2, 1, "", "off"], [5, 2, 1, "", "on"], [5, 2, 1, "", "reconfigure"], [5, 2, 1, "", "toggle"], [5, 2, 1, "", "value"]], "machine.RTC": [[5, 2, 1, "", "datetime"]], "machine.SPI": [[5, 5, 1, "", "CS_ACTIVE_HIGH"], [5, 5, 1, "", "CS_ACTIVE_LOW"], [5, 5, 1, "", "LSB"], [5, 5, 1, "", "MSB"], [5, 2, 1, "", "configure"], [5, 2, 1, "", "transceive"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"gener": 0, "ble": 1, "gatt": 1, "server": 1, "event": 1, "constant": 1, "callback": 1, "canva": [2, 4], "network": 2, "uwb": 3, "welcom": 4, "document": 4, "content": 4, "indic": 4, "tabl": 4, "machin": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"General": [[0, "module-canvas"]], "BLE": [[1, "ble"]], "GATT Server Event Constants": [[1, "gatt-server-event-constants"]], "GATT Server Callbacks": [[1, "gatt-server-callbacks"]], "Canvas Networking": [[2, "canvas-networking"]], "UWB": [[3, "uwb"]], "Welcome to Canvas documentation!": [[4, "welcome-to-canvas-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Machine": [[5, "machine"]]}, "indexentries": {"nfctag (class in canvas)": [[0, "canvas.NFCTag"]], "timer (class in canvas)": [[0, "canvas.Timer"]], "canvas": [[0, "module-canvas"]], "change_period() (canvas.timer method)": [[0, "canvas.Timer.change_period"]], "clear() (canvas.nfctag method)": [[0, "canvas.NFCTag.clear"]], "close() (canvas.nfctag method)": [[0, "canvas.NFCTag.close"]], "module": [[0, "module-canvas"], [1, "module-canvas_ble"], [2, "module-canvas_net"], [3, "module-canvas_uwb"], [5, "module-machine"]], "restart() (canvas.timer method)": [[0, "canvas.Timer.restart"]], "set_write_callback() (canvas.nfctag method)": [[0, "canvas.NFCTag.set_write_callback"]], "start() (canvas.timer method)": [[0, "canvas.Timer.start"]], "stop() (canvas.timer method)": [[0, "canvas.Timer.stop"]], "sync_to_buffer() (canvas.nfctag method)": [[0, "canvas.NFCTag.sync_to_buffer"]], "zcbor_from_obj() (in module canvas)": [[0, "canvas.zcbor_from_obj"]], "zcbor_to_obj() (in module canvas)": [[0, "canvas.zcbor_to_obj"]], "ad_type_flags (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_FLAGS"]], "ad_type_manu_specific (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_MANU_SPECIFIC"]], "ad_type_name_complete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_NAME_COMPLETE"]], "ad_type_name_short (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_NAME_SHORT"]], "ad_type_uuid128_complete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID128_COMPLETE"]], "ad_type_uuid128_incomplete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID128_INCOMPLETE"]], "ad_type_uuid16_complete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID16_COMPLETE"]], "ad_type_uuid16_incomplete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID16_INCOMPLETE"]], "ad_type_uuid32_complete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID32_COMPLETE"]], "ad_type_uuid32_incomplete (in module canvas_ble)": [[1, "canvas_ble.AD_TYPE_UUID32_INCOMPLETE"]], "advertiser (class in canvas_ble)": [[1, "canvas_ble.Advertiser"]], "cccd_state_both (canvas_ble.gattclient attribute)": [[1, "canvas_ble.GattClient.CCCD_STATE_BOTH"]], "cccd_state_disable (canvas_ble.gattclient attribute)": [[1, "canvas_ble.GattClient.CCCD_STATE_DISABLE"]], "cccd_state_indicate (canvas_ble.gattclient attribute)": [[1, "canvas_ble.GattClient.CCCD_STATE_INDICATE"]], "cccd_state_notify (canvas_ble.gattclient attribute)": [[1, "canvas_ble.GattClient.CCCD_STATE_NOTIFY"]], "connection (class in canvas_ble)": [[1, "canvas_ble.Connection"]], "event_attr_value (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_ATTR_VALUE"]], "event_cccd_both (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_CCCD_BOTH"]], "event_cccd_indicate (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_CCCD_INDICATE"]], "event_cccd_none (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_CCCD_NONE"]], "event_cccd_notify (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_CCCD_NOTIFY"]], "event_indication_ok (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_INDICATION_OK"]], "event_indication_timeout (canvas_ble.gattserver attribute)": [[1, "canvas_ble.GattServer.EVENT_INDICATION_TIMEOUT"]], "filter_addr (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.FILTER_ADDR"]], "filter_data (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.FILTER_DATA"]], "filter_manuf_data (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.FILTER_MANUF_DATA"]], "filter_name (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.FILTER_NAME"]], "filter_uuid (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.FILTER_UUID"]], "gattclient (class in canvas_ble)": [[1, "canvas_ble.GattClient"]], "gattserver (class in canvas_ble)": [[1, "canvas_ble.GattServer"]], "phy_125k (in module canvas_ble)": [[1, "canvas_ble.PHY_125K"]], "phy_1m (in module canvas_ble)": [[1, "canvas_ble.PHY_1M"]], "phy_2m (in module canvas_ble)": [[1, "canvas_ble.PHY_2M"]], "phy_500k (in module canvas_ble)": [[1, "canvas_ble.PHY_500K"]], "phy_coded (in module canvas_ble)": [[1, "canvas_ble.PHY_CODED"]], "scanner (class in canvas_ble)": [[1, "canvas_ble.Scanner"]], "type_connectable (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_CONNECTABLE"]], "type_directed (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_DIRECTED"]], "type_extended (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_EXTENDED"]], "type_legacy (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_LEGACY"]], "type_scannable (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_SCANNABLE"]], "type_scan_response (canvas_ble.scanner attribute)": [[1, "canvas_ble.Scanner.TYPE_SCAN_RESPONSE"]], "add_canvas_data() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.add_canvas_data"]], "add_data() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.add_data"]], "add_ltv() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.add_ltv"]], "add_smp_uuid() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.add_smp_uuid"]], "add_tag_string() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.add_tag_string"]], "addr_to_str() (in module canvas_ble)": [[1, "canvas_ble.addr_to_str"]], "build_from_dict() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.build_from_dict"]], "canvas_ble": [[1, "module-canvas_ble"]], "clear_buffer() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.clear_buffer"]], "configure_subscription() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.configure_subscription"]], "connect() (in module canvas_ble)": [[1, "canvas_ble.connect"]], "disconnect() (canvas_ble.connection method)": [[1, "canvas_ble.Connection.disconnect"]], "discover() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.discover"]], "enable() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.enable"]], "filter_add() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.filter_add"]], "filter_reset() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.filter_reset"]], "find_ltv() (in module canvas_ble)": [[1, "canvas_ble.find_ltv"]], "get_addr() (canvas_ble.connection method)": [[1, "canvas_ble.Connection.get_addr"]], "get_dict() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.get_dict"]], "get_rssi() (canvas_ble.connection method)": [[1, "canvas_ble.Connection.get_rssi"]], "indicate() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.indicate"]], "init() (in module canvas_ble)": [[1, "canvas_ble.init"]], "my_addr() (in module canvas_ble)": [[1, "canvas_ble.my_addr"]], "notify() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.notify"]], "read() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.read"]], "read() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.read"]], "set_callbacks() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.set_callbacks"]], "set_channel_mask() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.set_channel_mask"]], "set_directed() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.set_directed"]], "set_interval() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.set_interval"]], "set_name() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.set_name"]], "set_periph_callbacks() (in module canvas_ble)": [[1, "canvas_ble.set_periph_callbacks"]], "set_phys() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.set_phys"]], "set_phys() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.set_phys"]], "set_properties() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.set_properties"]], "set_timing() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.set_timing"]], "start() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.start"]], "start() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.start"]], "start() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.start"]], "stop() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.stop"]], "stop() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.stop"]], "stop() (canvas_ble.scanner method)": [[1, "canvas_ble.Scanner.stop"]], "str_to_addr() (in module canvas_ble)": [[1, "canvas_ble.str_to_addr"]], "update() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.update"]], "validate_data() (canvas_ble.advertiser method)": [[1, "canvas_ble.Advertiser.validate_data"]], "write() (canvas_ble.gattclient method)": [[1, "canvas_ble.GattClient.write"]], "write() (canvas_ble.gattserver method)": [[1, "canvas_ble.GattServer.write"]], "event_active_bands (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_ACTIVE_BANDS"]], "event_apn_update (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_APN_UPDATE"]], "event_bands (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_BANDS"]], "event_fota_count (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_FOTA_COUNT"]], "event_fota_state (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_FOTA_STATE"]], "event_gps (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_GPS"]], "event_gps_position_status (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_GPS_POSITION_STATUS"]], "event_network_state (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_NETWORK_STATE"]], "event_polte (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_POLTE"]], "event_polte_locate_status (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_POLTE_LOCATE_STATUS"]], "event_polte_registration (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_POLTE_REGISTRATION"]], "event_rat (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_RAT"]], "event_revision (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_REVISION"]], "event_rssi (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_RSSI"]], "event_sinr (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_SINR"]], "event_site_survey (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_SITE_SURVEY"]], "event_sleep_state (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_SLEEP_STATE"]], "event_startup_state (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_STARTUP_STATE"]], "event_state (canvas_net.modem attribute)": [[2, "canvas_net.Modem.EVENT_STATE"]], "ev_rd_bootstrap_reg_complete (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_BOOTSTRAP_REG_COMPLETE"]], "ev_rd_bootstrap_reg_failure (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_BOOTSTRAP_REG_FAILURE"]], "ev_rd_bootstrap_transfer_complete (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_BOOTSTRAP_TRANSFER_COMPLETE"]], "ev_rd_deregister (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_DEREGISTER"]], "ev_rd_deregister_failure (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_DEREGISTER_FAILURE"]], "ev_rd_disconnect (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_DISCONNECT"]], "ev_rd_engine_suspended (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_ENGINE_SUSPENDED"]], "ev_rd_network_error (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_NETWORK_ERROR"]], "ev_rd_queue_mode_rx_off (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_QUEUE_MODE_RX_OFF"]], "ev_rd_registration_complete (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_REGISTRATION_COMPLETE"]], "ev_rd_registration_failure (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_REGISTRATION_FAILURE"]], "ev_rd_reg_timeout (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_REG_TIMEOUT"]], "ev_rd_reg_update (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_REG_UPDATE"]], "ev_rd_reg_update_complete (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.EV_RD_REG_UPDATE_COMPLETE"]], "lwm2m (class in canvas_net)": [[2, "canvas_net.Lwm2m"]], "modem (class in canvas_net)": [[2, "canvas_net.Modem"]], "obj_device (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.OBJ_DEVICE"]], "obj_security (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.OBJ_SECURITY"]], "obj_server (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.OBJ_SERVER"]], "security_cert (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.SECURITY_CERT"]], "security_cert_est (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.SECURITY_CERT_EST"]], "security_nosec (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.SECURITY_NOSEC"]], "security_psk (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.SECURITY_PSK"]], "security_raw_pk (canvas_net.lwm2m attribute)": [[2, "canvas_net.Lwm2m.SECURITY_RAW_PK"]], "state_fota_complete (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_COMPLETE"]], "state_fota_file_error (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_FILE_ERROR"]], "state_fota_idle (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_IDLE"]], "state_fota_install (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_INSTALL"]], "state_fota_pad (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_PAD"]], "state_fota_reboot_and_reconfigure (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_REBOOT_AND_RECONFIGURE"]], "state_fota_send_eot (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_SEND_EOT"]], "state_fota_start (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_START"]], "state_fota_wip (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_FOTA_WIP"]], "state_initialized (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_INITIALIZED"]], "state_network_emergency (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_EMERGENCY"]], "state_network_home_network (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_HOME_NETWORK"]], "state_network_not_registered (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_NOT_REGISTERED"]], "state_network_out_of_coverage (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_OUT_OF_COVERAGE"]], "state_network_registration_denied (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_REGISTRATION_DENIED"]], "state_network_roaming (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_ROAMING"]], "state_network_searching (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_SEARCHING"]], "state_network_unable_to_configure (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NETWORK_UNABLE_TO_CONFIGURE"]], "state_not_ready (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_NOT_READY"]], "state_sleep_awake (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_SLEEP_AWAKE"]], "state_sleep_hibernate (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_SLEEP_HIBERNATE"]], "state_sleep_lite_hibernate (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_SLEEP_LITE_HIBERNATE"]], "state_sleep_sleep (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_SLEEP_SLEEP"]], "state_sleep_uninitialized (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_SLEEP_UNINITIALIZED"]], "state_startup_inactive_sim (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_INACTIVE_SIM"]], "state_startup_ready (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_READY"]], "state_startup_simlock (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_SIMLOCK"]], "state_startup_sim_not_present (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_SIM_NOT_PRESENT"]], "state_startup_unknown (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_UNKNOWN"]], "state_startup_unrecoverable_error (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_UNRECOVERABLE_ERROR"]], "state_startup_waiting_for_access_code (canvas_net.modem attribute)": [[2, "canvas_net.Modem.STATE_STARTUP_WAITING_FOR_ACCESS_CODE"]], "canvas_net": [[2, "module-canvas_net"]], "create() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.create"]], "get_bytes() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.get_bytes"]], "get_firmware_version() (canvas_net.modem method)": [[2, "canvas_net.Modem.get_firmware_version"]], "get_iccid() (canvas_net.modem method)": [[2, "canvas_net.Modem.get_iccid"]], "get_imei() (canvas_net.modem method)": [[2, "canvas_net.Modem.get_imei"]], "get_imsi() (canvas_net.modem method)": [[2, "canvas_net.Modem.get_imsi"]], "get_int() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.get_int"]], "get_serial_number() (canvas_net.modem method)": [[2, "canvas_net.Modem.get_serial_number"]], "power_off() (canvas_net.modem method)": [[2, "canvas_net.Modem.power_off"]], "reset() (canvas_net.modem method)": [[2, "canvas_net.Modem.reset"]], "set() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.set"]], "set_apn() (canvas_net.modem method)": [[2, "canvas_net.Modem.set_apn"]], "set_bands() (canvas_net.modem method)": [[2, "canvas_net.Modem.set_bands"]], "set_endpoint_name() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.set_endpoint_name"]], "set_exec_handler() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.set_exec_handler"]], "set_rat() (canvas_net.modem method)": [[2, "canvas_net.Modem.set_rat"]], "start() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.start"]], "stop() (canvas_net.lwm2m method)": [[2, "canvas_net.Lwm2m.stop"]], "update_firmware() (canvas_net.modem method)": [[2, "canvas_net.Modem.update_firmware"]], "config_device_role (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_DEVICE_ROLE"]], "config_device_type (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_DEVICE_TYPE"]], "config_local_address (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_LOCAL_ADDRESS"]], "config_mac_address_mode (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_MAC_ADDRESS_MODE"]], "config_max_rr_retry (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_MAX_RR_RETRY"]], "config_multi_node_mode (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_MULTI_NODE_MODE"]], "config_number_of_controlees (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_NUMBER_OF_CONTROLEES"]], "config_peer_address (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_PEER_ADDRESS"]], "config_preamble_code_index (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_PREAMBLE_CODE_INDEX"]], "config_ranging_interval (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_RANGING_INTERVAL"]], "config_ranging_round_usage (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_RANGING_ROUND_USAGE"]], "config_rf_frame_config (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_RF_FRAME_CONFIG"]], "config_sfd_id (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_SFD_ID"]], "config_slots_per_rr (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_SLOTS_PER_RR"]], "config_slot_duration (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_SLOT_DURATION"]], "config_tx_power (in module canvas_uwb)": [[3, "canvas_uwb.CONFIG_TX_POWER"]], "mode_multicast (in module canvas_uwb)": [[3, "canvas_uwb.MODE_MULTICAST"]], "mode_unicast (in module canvas_uwb)": [[3, "canvas_uwb.MODE_UNICAST"]], "range_error (in module canvas_uwb)": [[3, "canvas_uwb.RANGE_ERROR"]], "role_initiator (in module canvas_uwb)": [[3, "canvas_uwb.ROLE_INITIATOR"]], "role_responder (in module canvas_uwb)": [[3, "canvas_uwb.ROLE_RESPONDER"]], "uwbdevicestate (class in canvas_uwb)": [[3, "canvas_uwb.UwbDeviceState"]], "uwbsession (class in canvas_uwb)": [[3, "canvas_uwb.UwbSession"]], "uwbsessionstate (class in canvas_uwb)": [[3, "canvas_uwb.UwbSessionState"]], "uwbstackcapabilities (class in canvas_uwb)": [[3, "canvas_uwb.UwbStackCapabilities"]], "add_multicast() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.add_multicast"]], "canvas_uwb": [[3, "module-canvas_uwb"]], "close() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.close"]], "del_multicast() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.del_multicast"]], "get_app_config() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.get_app_config"]], "get_channel_mask() (canvas_uwb.uwbstackcapabilities method)": [[3, "canvas_uwb.UwbStackCapabilities.get_channel_mask"]], "get_device_state() (in module canvas_uwb)": [[3, "canvas_uwb.get_device_state"]], "get_max_multicast() (canvas_uwb.uwbstackcapabilities method)": [[3, "canvas_uwb.UwbStackCapabilities.get_max_multicast"]], "get_max_sessions() (canvas_uwb.uwbstackcapabilities method)": [[3, "canvas_uwb.UwbStackCapabilities.get_max_sessions"]], "get_session_state() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.get_session_state"]], "get_stack_capability() (in module canvas_uwb)": [[3, "canvas_uwb.get_stack_capability"]], "init() (in module canvas_uwb)": [[3, "canvas_uwb.init"]], "is_active() (canvas_uwb.uwbdevicestate method)": [[3, "canvas_uwb.UwbDeviceState.is_active"]], "is_active() (canvas_uwb.uwbsessionstate method)": [[3, "canvas_uwb.UwbSessionState.is_active"]], "is_deinit() (canvas_uwb.uwbsessionstate method)": [[3, "canvas_uwb.UwbSessionState.is_deinit"]], "is_error() (canvas_uwb.uwbdevicestate method)": [[3, "canvas_uwb.UwbDeviceState.is_error"]], "is_error() (canvas_uwb.uwbsessionstate method)": [[3, "canvas_uwb.UwbSessionState.is_error"]], "is_idle() (canvas_uwb.uwbsessionstate method)": [[3, "canvas_uwb.UwbSessionState.is_idle"]], "is_init() (canvas_uwb.uwbsessionstate method)": [[3, "canvas_uwb.UwbSessionState.is_init"]], "is_initiator_supported() (canvas_uwb.uwbstackcapabilities method)": [[3, "canvas_uwb.UwbStackCapabilities.is_initiator_supported"]], "is_ready() (canvas_uwb.uwbdevicestate method)": [[3, "canvas_uwb.UwbDeviceState.is_ready"]], "is_responder_supported() (canvas_uwb.uwbstackcapabilities method)": [[3, "canvas_uwb.UwbStackCapabilities.is_responder_supported"]], "raw_uci_send() (in module canvas_uwb)": [[3, "canvas_uwb.raw_uci_send"]], "session_new() (in module canvas_uwb)": [[3, "canvas_uwb.session_new"]], "set_app_config() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.set_app_config"]], "set_callback() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.set_callback"]], "set_local_addr() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.set_local_addr"]], "set_peer_addr() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.set_peer_addr"]], "set_ranging_interval() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.set_ranging_interval"]], "shutdown() (in module canvas_uwb)": [[3, "canvas_uwb.shutdown"]], "start() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.start"]], "stop() (canvas_uwb.uwbsession method)": [[3, "canvas_uwb.UwbSession.stop"]], "analog (machine.pin attribute)": [[5, "machine.Pin.ANALOG"]], "cs_active_high (machine.spi attribute)": [[5, "machine.SPI.CS_ACTIVE_HIGH"]], "cs_active_low (machine.spi attribute)": [[5, "machine.SPI.CS_ACTIVE_LOW"]], "event_both (machine.pin attribute)": [[5, "machine.Pin.EVENT_BOTH"]], "event_falling (machine.pin attribute)": [[5, "machine.Pin.EVENT_FALLING"]], "event_none (machine.pin attribute)": [[5, "machine.Pin.EVENT_NONE"]], "event_rising (machine.pin attribute)": [[5, "machine.Pin.EVENT_RISING"]], "i2c (class in machine)": [[5, "machine.I2C"]], "in (machine.pin attribute)": [[5, "machine.Pin.IN"]], "lsb (machine.spi attribute)": [[5, "machine.SPI.LSB"]], "msb (machine.spi attribute)": [[5, "machine.SPI.MSB"]], "no_connect (machine.pin attribute)": [[5, "machine.Pin.NO_CONNECT"]], "open_drain (machine.pin attribute)": [[5, "machine.Pin.OPEN_DRAIN"]], "out (machine.pin attribute)": [[5, "machine.Pin.OUT"]], "pull_down (machine.pin attribute)": [[5, "machine.Pin.PULL_DOWN"]], "pull_none (machine.pin attribute)": [[5, "machine.Pin.PULL_NONE"]], "pull_up (machine.pin attribute)": [[5, "machine.Pin.PULL_UP"]], "pin (class in machine)": [[5, "machine.Pin"]], "rtc (class in machine)": [[5, "machine.RTC"]], "spi (class in machine)": [[5, "machine.SPI"]], "configure() (machine.spi method)": [[5, "machine.SPI.configure"]], "configure_event() (machine.pin method)": [[5, "machine.Pin.configure_event"]], "datetime() (machine.rtc method)": [[5, "machine.RTC.datetime"]], "high() (machine.pin method)": [[5, "machine.Pin.high"]], "low() (machine.pin method)": [[5, "machine.Pin.low"]], "machine": [[5, "module-machine"]], "off() (machine.pin method)": [[5, "machine.Pin.off"]], "on() (machine.pin method)": [[5, "machine.Pin.on"]], "read() (machine.i2c method)": [[5, "machine.I2C.read"]], "reconfigure() (machine.pin method)": [[5, "machine.Pin.reconfigure"]], "set_address() (machine.i2c method)": [[5, "machine.I2C.set_address"]], "toggle() (machine.pin method)": [[5, "machine.Pin.toggle"]], "transceive() (machine.spi method)": [[5, "machine.SPI.transceive"]], "value() (machine.pin method)": [[5, "machine.Pin.value"]], "write() (machine.i2c method)": [[5, "machine.I2C.write"]], "write_read() (machine.i2c method)": [[5, "machine.I2C.write_read"]]}})